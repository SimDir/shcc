<?php

require_once '../../common.php';
Auth::grantAccess(['admin']);
HTML::showPageHeader('Объекты');
?>
<p>Создайте иерархию объектов - мест размещения устройств. Рекомендуется использовать древовидную структуру где корневыми элементами являются отдельные объекты недвижимости (дом, гараж, баня и т.д.), далее, у каждого объекта есть свои помещения (прихожая, спальня, кухня, подвал и т.д.). В каждом помещении могут иметься окна, двери и т.д. На окнах могут быть добавлены форточки, ставни и т.д.</p>
<div class="bg-warning">
<p>Внимание!!! В данный момент не проверяется попытка присвоения в качестве родительского элемента одного из дочерних. В этом случае вся ветка потеряет связь с корневыми элементами и пропадёт из списка редактирования. Для восстановления дерева объектов будет необходимо вручную скорректировать базу данных. Эта недоработка будет исправлена в будущих версиях системы.</p>
<p>Удаление элементов, которые содержат дочерние объекты или привязанные устройства, невозможно, т.к. это будет вызывать нарушение целостности базы данных и генерировать исключительную ситуацию.</p>
</div>
<p><a href="edit/">Создать новый корневой элемент</a></p>
<?php
showList(\SmartHome\Places::getRootPlaces());
HTML::showPageFooter();

function showList($list) {
?>
<ul>
<?php
    foreach ($list as $key=>$value) {
        $child=\SmartHome\Places::getPlaceChild($key);
?>
        <li><?=$value?> || <a href="edit/?id=<?=$key?>">Редактировать</a> || <a href="edit/?pid=<?=$key?>">Создать дочерний элемент</a><?php if(sizeof($child)==0) {?> || <a href="remove/?id=<?=$key?>">Удалить</a><?php } ?></li>
<?php
        if(sizeof($child)>0) {
            showList($child);
        }
    }
?>
</ul>
<?php
}